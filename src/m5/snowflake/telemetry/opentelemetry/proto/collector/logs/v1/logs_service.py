# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources:
# plugin: python-serialize

from typing import (
    Any,
    Dict,
    List,
    Optional,
)

from m5.snowflake.telemetry.serialize import (
    Enum,
    ProtoSerializer,
    util,
)


def ExportLogsServiceRequest(
    resource_logs: Optional[List[Dict[str, Any]]] = None,
) -> Dict[str, Any]:
    size = 0
    if resource_logs:
        size += util.size_repeated_message(b"\n", resource_logs)

    return {
        "__size": size,
        "__serialize_function": write_to_ExportLogsServiceRequest,
        "resource_logs": resource_logs,
    }


def write_to_ExportLogsServiceRequest(
    message: Dict[str, Any], proto_serializer: ProtoSerializer
) -> None:
    if message["resource_logs"]:
        proto_serializer.serialize_repeated_message(b"\n", message["resource_logs"])


def ExportLogsServiceResponse(
    partial_success: Optional[Dict[str, Any]] = None,
) -> Dict[str, Any]:
    size = 0
    if partial_success:
        size += util.size_message(b"\n", partial_success)

    return {
        "__size": size,
        "__serialize_function": write_to_ExportLogsServiceResponse,
        "partial_success": partial_success,
    }


def write_to_ExportLogsServiceResponse(
    message: Dict[str, Any], proto_serializer: ProtoSerializer
) -> None:
    if message["partial_success"]:
        proto_serializer.serialize_message(b"\n", message["partial_success"])


def ExportLogsPartialSuccess(
    rejected_log_records: Optional[int] = None,
    error_message: Optional[str] = None,
) -> Dict[str, Any]:
    size = 0
    if rejected_log_records:
        size += util.size_int64(b"\x08", rejected_log_records)
    if error_message:
        size += util.size_string(b"\x12", error_message)

    return {
        "__size": size,
        "__serialize_function": write_to_ExportLogsPartialSuccess,
        "rejected_log_records": rejected_log_records,
        "error_message": error_message,
    }


def write_to_ExportLogsPartialSuccess(
    message: Dict[str, Any], proto_serializer: ProtoSerializer
) -> None:
    if message["rejected_log_records"]:
        proto_serializer.serialize_int64(b"\x08", message["rejected_log_records"])
    if message["error_message"]:
        proto_serializer.serialize_string(b"\x12", message["error_message"])
