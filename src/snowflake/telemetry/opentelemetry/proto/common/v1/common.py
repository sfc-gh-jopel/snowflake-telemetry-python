# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources:
# plugin: python-serialize

from typing import List

from snowflake.telemetry.serialize import (
    Enum,
    MessageMarshaler,
    ProtoSerializer,
)


def write_to_AnyValue(
    proto_serializer: ProtoSerializer,
    string_value: str = None,
    bool_value: bool = None,
    int_value: int = None,
    double_value: float = None,
    array_value: MessageMarshaler = None,
    kvlist_value: MessageMarshaler = None,
    bytes_value: bytes = None,
):
    # oneof group value
    if bytes_value is not None:
        proto_serializer.serialize_bytes(b":", bytes_value)
    elif kvlist_value is not None:
        proto_serializer.serialize_message(b"2", kvlist_value)
    elif array_value is not None:
        proto_serializer.serialize_message(b"*", array_value)
    elif double_value is not None:
        proto_serializer.serialize_double(b"!", double_value)
    elif int_value is not None:
        proto_serializer.serialize_int64(b"\x18", int_value)
    elif bool_value is not None:
        proto_serializer.serialize_bool(b"\x10", bool_value)
    elif string_value is not None:
        proto_serializer.serialize_string(b"\n", string_value)


def write_to_ArrayValue(
    proto_serializer: ProtoSerializer,
    values: List[MessageMarshaler] = None,
):
    if values:
        proto_serializer.serialize_repeated_message(b"\n", values)


def write_to_KeyValueList(
    proto_serializer: ProtoSerializer,
    values: List[MessageMarshaler] = None,
):
    if values:
        proto_serializer.serialize_repeated_message(b"\n", values)


def write_to_KeyValue(
    proto_serializer: ProtoSerializer,
    key: str = "",
    value: MessageMarshaler = None,
):
    if value:
        proto_serializer.serialize_message(b"\x12", value)
    if key:
        proto_serializer.serialize_string(b"\n", key)


def write_to_InstrumentationScope(
    proto_serializer: ProtoSerializer,
    name: str = "",
    version: str = "",
    attributes: List[MessageMarshaler] = None,
    dropped_attributes_count: int = 0,
):
    if dropped_attributes_count:
        proto_serializer.serialize_uint32(b" ", dropped_attributes_count)
    if attributes:
        proto_serializer.serialize_repeated_message(b"\x1a", attributes)
    if version:
        proto_serializer.serialize_string(b"\x12", version)
    if name:
        proto_serializer.serialize_string(b"\n", name)
