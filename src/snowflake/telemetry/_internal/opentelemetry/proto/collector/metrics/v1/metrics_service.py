# Generated by the protoc compiler with a custom plugin. DO NOT EDIT!
# sources: opentelemetry/proto/collector/metrics/v1/metrics_service.proto

from typing import (
    List,
    Optional,
)

from snowflake.telemetry._internal.serialize import (
    Enum,
    ProtoSerializer,
)


def ExportMetricsServiceRequest(
    resource_metrics: Optional[List[bytes]] = None,
) -> bytes:
    proto_serializer = ProtoSerializer()
    if resource_metrics:
        proto_serializer.serialize_repeated_message(b"\n", resource_metrics)
    return proto_serializer.out


def ExportMetricsServiceResponse(
    partial_success: Optional[bytes] = None,
) -> bytes:
    proto_serializer = ProtoSerializer()
    if partial_success is not None:
        proto_serializer.serialize_message(b"\n", partial_success)
    return proto_serializer.out


def ExportMetricsPartialSuccess(
    rejected_data_points: Optional[int] = None,
    error_message: Optional[str] = None,
) -> bytes:
    proto_serializer = ProtoSerializer()
    if rejected_data_points:
        proto_serializer.serialize_int64(b"\x08", rejected_data_points)
    if error_message:
        proto_serializer.serialize_string(b"\x12", error_message)
    return proto_serializer.out
