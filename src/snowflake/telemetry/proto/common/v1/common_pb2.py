# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: opentelemetry/proto/common/v1/common.proto
# plugin: python-serialize
from dataclasses import dataclass
from typing import List

import serialize


@dataclass
class AnyValue(serialize.Message):
    string_value: str = serialize.string_field(1, group="value")
    bool_value: bool = serialize.bool_field(2, group="value")
    int_value: int = serialize.int64_field(3, group="value")
    double_value: float = serialize.double_field(4, group="value")
    array_value: "ArrayValue" = serialize.message_field(5, group="value")
    kvlist_value: "KeyValueList" = serialize.message_field(6, group="value")
    bytes_value: bytes = serialize.bytes_field(7, group="value")


@dataclass
class ArrayValue(serialize.Message):
    values: List["AnyValue"] = serialize.message_field(1)


@dataclass
class KeyValueList(serialize.Message):
    values: List["KeyValue"] = serialize.message_field(1)


@dataclass
class KeyValue(serialize.Message):
    key: str = serialize.string_field(1)
    value: "AnyValue" = serialize.message_field(2)


@dataclass
class InstrumentationScope(serialize.Message):
    name: str = serialize.string_field(1)
    version: str = serialize.string_field(2)
    attributes: List["KeyValue"] = serialize.message_field(3)
    dropped_attributes_count: int = serialize.uint32_field(4)
