# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: {{ proto_file }}
# plugin: python-serialize

from snowflake.telemetry.serialize import (
    Enum,
    ProtoSerializer,
    util,
)
from typing import List, Dict, Any, Optional

{% for enum in file_template.enums %}
class {{ enum.name }}(Enum):
{%- for value in enum.values %}
    {{ value.name }} = {{ value.number }}
{%- endfor %}
{% endfor %}

{% macro render_message(message) %}
def {{ message.name }}(
{% for field in message.fields %}
{% if field.fields is defined %}
{% for oneof_field in field.fields %}
    {{ oneof_field.name }}: Optional[{{ oneof_field.python_type }}] = None,
{% endfor %}
{% else %}
    {{ field.name }}: Optional[{{ field.python_type }}] = None,
{% endif %}
{% endfor %}
) -> Dict[str, Any]:
    size = 0
{%- for field in message.fields %}
{%- if field.fields is defined %}
{%- for oneof_field in field.fields %}
    if {{ oneof_field.name }} is not None:
        size += util.size_{{ oneof_field.proto_type }}({{ oneof_field.tag }}, {{ oneof_field.name }})
{%- endfor %}
{%- else %}
    if {{ field.name }}: 
        size += util.size_{{ field.proto_type }}({{ field.tag }}, {{ field.name }})
{%- endif %}
{%- endfor %}

    return {
        "__size": size,
        "__serialize_function": write_to_{{ message.name }},
{% for field in message.fields %}
{% if field.fields is defined %}
{% for oneof_field in field.fields %}
        "{{ oneof_field.name }}": {{ oneof_field.name }},
{% endfor %}
{% else %}
        "{{ field.name }}": {{ field.name }},
{% endif %}
{% endfor %}
    }
    
def write_to_{{ message.name }}(message: Dict[str, Any], proto_serializer: ProtoSerializer) -> None:
{%- for field in message.fields %}
{%- if field.fields is defined %}
    # oneof group {{ field.name }}
{%- for oneof_field in field.fields %}
    {% if loop.index != 1 %}el{% endif %}if message["{{ oneof_field.name }}"] is not None:
        proto_serializer.serialize_{{ oneof_field.proto_type }}({{ oneof_field.tag }}, message["{{ oneof_field.name }}"])
{%- endfor %}
{%- else %}
    if message["{{ field.name }}"]: proto_serializer.serialize_{{ field.proto_type }}({{ field.tag }}, message["{{ field.name }}"])
{%- endif %}
{%- endfor %}
{% endmacro %}

{% for message in file_template.messages %}
{{ render_message(message) }}
{% endfor %}
